---
import TeslaLogo from "./TeslaLogo.astro";
import Account from "./icons/Account.astro";
import Question from "./icons/Question.astro";
import World from "./icons/World.astro";
---

<header
  id="landing-header"
  class="fixed top-0 left-0 w-screen flex justify-between py-4 px-11 font-medium z-30 transition-colors"
>
  <div class="flex flex-grow">
    <TeslaLogo />
  </div>

  <nav>
    <ul class="flex text-sm [&>li]:inline-block [&>li]:px-4 [&>li]:py-0">
      <li class="menu-option">Vehículos</li>
      <li class="menu-option">Energía</li>
      <li class="menu-option">Carga</li>
      <li class="menu-option">Descubrir</li>
      <li class="menu-option">Tienda</li>
    </ul>

    <div class="
    backdrop rounded
    absolute bg-black/5 backdrop-blur-lg
    px-4 py-3
    w-[var(--width)] h-[var(--height)]
    left-0
    top-0
    translate-x-[var(--left)]
    translate-y-[var(--top)]
    transition-translate
    duration-500
    ease-in-out opacity-0 -z-10
    "></div>
  </nav>

  <nav class="flex flex-grow justify-end">
    <ul class="flex text-sm [&>li]:inline-block [&>li]:px-1">
      <li><Question /></li>
      <li><World /></li>
      <li><Account /></li>
    </ul>

  </nav>



</header>

<script>
  const menuItems = document.querySelectorAll('.menu-option')
  const backdropItem = document.querySelector('.backdrop') as HTMLElement

  menuItems.forEach(item => {
    item.addEventListener('mouseenter', () => {
      const { top, left, width, height } = item.getBoundingClientRect()

      backdropItem.style.setProperty('--top', `${top}px`)
      backdropItem.style.setProperty('--left', `${left}px`)
      backdropItem.style.setProperty('--width', `${width}px`)
      backdropItem.style.setProperty('--height', `${height}px`)

      backdropItem.style.opacity = '1'
      backdropItem.style.visibility = 'visible'
    })

    item.addEventListener('mouseleave', () => {
      backdropItem.style.opacity = '0'
      backdropItem.style.visibility = 'hidden'
    })
  })



</script>

<script>
  const headerEl = document.querySelector("#landing-header") as HTMLElement;

  const observerOptions = {
    root: null,
    rootMargin: "0px", // en cuanto se vea el elemento
    threshold: 0.9, // porcentaje de visibilidad
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry;
      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color");
        headerEl.style.color = color;
      }
    });
  }, observerOptions);

  const sectionElements = document.querySelectorAll(".landing-section");
  sectionElements.forEach((section) => observer.observe(section));
</script>

<script>
  const headerEl = document.querySelector("#landing-header") as HTMLElement;
  const sectionElements = document.querySelectorAll(".landing-section");

  const observerOptions = {
    root: null,
    rootMargin: "0px", // en cuanto se vea el elemento
    threshold: 0.9, // porcentaje de visibilidad
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry;
      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color");
        headerEl.style.color = color;
      }
    });
  }, observerOptions);

  sectionElements.forEach((section) => observer.observe(section));




</script>


<script></script>